{
  "openapi":"3.0.2",
  "info": {
    "title":"Regrex",
    "version":"1.0",
    "license": {
      "name": "MIT",
      "url": "https://raw.githubusercontent.com/DiegoVictor/regrex/refs/heads/main/LICENSE"
    }
  },
  "servers": [
    {
      "url":"http://localhost:3000"
    }
  ],
  "paths": {
    "/grex": {
      "post": {
        "tags": ["grex"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Grex"
              },
              "example": {
                "terms": [
                  "sample",
                  "example",
                  "simple"
                ],
                "flags": ["x"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a regex to match the provided terms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "(?x)^(?:exa|s[ai])mple$"
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "expected": {
                            "type": "string"
                          },
                          "received": {},
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Validation Failed",
                  "details": [
                    {
                      "code": "invalid_type",
                      "expected": "object",
                      "received": "null",
                      "path": [],
                      "message": "Expected object, received null"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Oops! Something goes wrong, try again later."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Grex": {
        "type": "object",
        "properties": {
          "terms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["terms"]
      }
    }
  }
}
